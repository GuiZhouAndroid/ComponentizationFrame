plugins {
    id 'com.android.library'
}

//config.gradle根目录变量全局
def app = rootProject.ext.androidConfig
def appNamespaceConfig = rootProject.ext.namespaceConfig
def dep = rootProject.ext.dependenciesConfig

android {
    namespace appNamespaceConfig["namespace_lib_frame_core"]
    compileSdk app["compileSdk"]
    buildToolsVersion app["buildToolsVersion"]

    defaultConfig {
        minSdk app["minSdk"]
        consumerProguardFiles "consumer-rules.pro"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// 组件缓存更新时间设置（默认每次build都更新）
configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
}

dependencies {
    //日志记录
//    api dep["acra"]
//    api dep["acra-mail"]
//    api dep["acra-dialog"]
//    api dep["acra-toast"]
//    api dep["acra-notification"]
//    api dep["acra-limiter"]
//    api dep["acra-advanced-scheduler"]
//    api dep["acra-core"]

    // ----------------引用远程第三方依赖库-----------------


    // ----------------引用远程自制依赖库-----------------
    //阿里router
    api(dep["arouter-api"])

    // ----------------使用本地自制库，便于开发时修改码，不用每次都改一次都推送SonaType-----------------
    //框架资源库
    api(project(':lib_frame_resource'))

    if (isUseLocalSupportLib) {// 本地库
        //api(project(':lib_support_all_lib'))
        //弹窗
        api(project(':lib_support_dialog'))
        //滑动返回
        api(project(':lib_support_swipeback'))
        //工具类库
        api(project(':lib_support_utils'))
        //工具类库
        api(project(':lib_support_mvp'))
        //工具类库
        api(project(':lib_support_network'))
    } else {//远程库
        //对话框
        api(dep["my-lib-dialog"])
        //滑动返回
        api(dep["my-lib-swipeback"])
        //工具类库
        api(dep["my-lib-utils"])
        //mvp架构
        api(dep["my-lib-mvp"])
        //网络请求
        api(dep["my-lib-network"])
    }
}